{
  "accounts.google.com:aud": {
    "key": "accounts.google.com:aud",
    "description": "Filters access by the Google application ID",
    "type": "String"
  },
  "accounts.google.com:oaud": {
    "key": "accounts.google.com:oaud",
    "description": "Filters access by the Google audience",
    "type": "String"
  },
  "accounts.google.com:sub": {
    "key": "accounts.google.com:sub",
    "description": "Filters access by the subject of the claim (the Google user ID)",
    "type": "String"
  },
  "aws:requesttag/${tagkey}": {
    "key": "aws:RequestTag/${TagKey}",
    "description": "Filters access by the tags that are passed in the request",
    "type": "String"
  },
  "aws:resourcetag/${tagkey}": {
    "key": "aws:ResourceTag/${TagKey}",
    "description": "Filters access by the tags associated with the resource",
    "type": "String"
  },
  "aws:tagkeys": {
    "key": "aws:TagKeys",
    "description": "Filters access by the tag keys that are passed in the request",
    "type": "ArrayOfString"
  },
  "cognito-identity.amazonaws.com:amr": {
    "key": "cognito-identity.amazonaws.com:amr",
    "description": "Filters access by the login information for Amazon Cognito",
    "type": "String"
  },
  "cognito-identity.amazonaws.com:aud": {
    "key": "cognito-identity.amazonaws.com:aud",
    "description": "Filters access by the Amazon Cognito identity pool ID",
    "type": "String"
  },
  "cognito-identity.amazonaws.com:sub": {
    "key": "cognito-identity.amazonaws.com:sub",
    "description": "Filters access by the subject of the claim (the Amazon Cognito user ID)",
    "type": "String"
  },
  "graph.facebook.com:app_id": {
    "key": "graph.facebook.com:app_id",
    "description": "Filters access by the Facebook application ID",
    "type": "String"
  },
  "graph.facebook.com:id": {
    "key": "graph.facebook.com:id",
    "description": "Filters access by the Facebook user ID",
    "type": "String"
  },
  "iam:resourcetag/${tagkey}": {
    "key": "iam:ResourceTag/${TagKey}",
    "description": "Filters access by the tags that are attached to the role that is being assumed",
    "type": "String"
  },
  "saml:aud": {
    "key": "saml:aud",
    "description": "Filters access by the endpoint URL to which SAML assertions are presented",
    "type": "String"
  },
  "saml:cn": {
    "key": "saml:cn",
    "description": "Filters access by the eduOrg attribute",
    "type": "ArrayOfString"
  },
  "saml:commonname": {
    "key": "saml:commonName",
    "description": "Filters access by the commonName attribute",
    "type": "String"
  },
  "saml:doc": {
    "key": "saml:doc",
    "description": "Filters access by on the principal that was used to assume the role",
    "type": "String"
  },
  "saml:eduorghomepageuri": {
    "key": "saml:eduorghomepageuri",
    "description": "Filters access by the eduOrg attribute",
    "type": "ArrayOfString"
  },
  "saml:eduorgidentityauthnpolicyuri": {
    "key": "saml:eduorgidentityauthnpolicyuri",
    "description": "Filters access by the eduOrg attribute",
    "type": "ArrayOfString"
  },
  "saml:eduorglegalname": {
    "key": "saml:eduorglegalname",
    "description": "Filters access by the eduOrg attribute",
    "type": "ArrayOfString"
  },
  "saml:eduorgsuperioruri": {
    "key": "saml:eduorgsuperioruri",
    "description": "Filters access by the eduOrg attribute",
    "type": "ArrayOfString"
  },
  "saml:eduorgwhitepagesuri": {
    "key": "saml:eduorgwhitepagesuri",
    "description": "Filters access by the eduOrg attribute",
    "type": "ArrayOfString"
  },
  "saml:edupersonaffiliation": {
    "key": "saml:edupersonaffiliation",
    "description": "Filters access by the eduPerson attribute",
    "type": "ArrayOfString"
  },
  "saml:edupersonassurance": {
    "key": "saml:edupersonassurance",
    "description": "Filters access by the eduPerson attribute",
    "type": "ArrayOfString"
  },
  "saml:edupersonentitlement": {
    "key": "saml:edupersonentitlement",
    "description": "Filters access by the eduPerson attribute",
    "type": "ArrayOfString"
  },
  "saml:edupersonnickname": {
    "key": "saml:edupersonnickname",
    "description": "Filters access by the eduPerson attribute",
    "type": "ArrayOfString"
  },
  "saml:edupersonorgdn": {
    "key": "saml:edupersonorgdn",
    "description": "Filters access by the eduPerson attribute",
    "type": "String"
  },
  "saml:edupersonorgunitdn": {
    "key": "saml:edupersonorgunitdn",
    "description": "Filters access by the eduPerson attribute",
    "type": "ArrayOfString"
  },
  "saml:edupersonprimaryaffiliation": {
    "key": "saml:edupersonprimaryaffiliation",
    "description": "Filters access by the eduPerson attribute",
    "type": "String"
  },
  "saml:edupersonprimaryorgunitdn": {
    "key": "saml:edupersonprimaryorgunitdn",
    "description": "Filters access by the eduPerson attribute",
    "type": "String"
  },
  "saml:edupersonprincipalname": {
    "key": "saml:edupersonprincipalname",
    "description": "Filters access by the eduPerson attribute",
    "type": "String"
  },
  "saml:edupersonscopedaffiliation": {
    "key": "saml:edupersonscopedaffiliation",
    "description": "Filters access by the eduPerson attribute",
    "type": "ArrayOfString"
  },
  "saml:edupersontargetedid": {
    "key": "saml:edupersontargetedid",
    "description": "Filters access by the eduPerson attribute",
    "type": "ArrayOfString"
  },
  "saml:givenname": {
    "key": "saml:givenName",
    "description": "Filters access by the givenName attribute",
    "type": "String"
  },
  "saml:iss": {
    "key": "saml:iss",
    "description": "Filters access by on the issuer, which is represented by a URN",
    "type": "String"
  },
  "saml:mail": {
    "key": "saml:mail",
    "description": "Filters access by the mail attribute",
    "type": "String"
  },
  "saml:name": {
    "key": "saml:name",
    "description": "Filters access by the name attribute",
    "type": "String"
  },
  "saml:namequalifier": {
    "key": "saml:namequalifier",
    "description": "Filters access by the hash value of the issuer, account ID, and friendly name",
    "type": "String"
  },
  "saml:organizationstatus": {
    "key": "saml:organizationStatus",
    "description": "Filters access by the organizationStatus attribute",
    "type": "String"
  },
  "saml:primarygroupsid": {
    "key": "saml:primaryGroupSID",
    "description": "Filters access by the primaryGroupSID attribute",
    "type": "String"
  },
  "saml:sub": {
    "key": "saml:sub",
    "description": "Filters access by the subject of the claim (the SAML user ID)",
    "type": "String"
  },
  "saml:sub_type": {
    "key": "saml:sub_type",
    "description": "Filters access by the value persistent, transient, or the full Format URI",
    "type": "String"
  },
  "saml:surname": {
    "key": "saml:surname",
    "description": "Filters access by the surname attribute",
    "type": "String"
  },
  "saml:uid": {
    "key": "saml:uid",
    "description": "Filters access by the uid attribute",
    "type": "String"
  },
  "saml:x500uniqueidentifier": {
    "key": "saml:x500UniqueIdentifier",
    "description": "Filters access by the uid attribute",
    "type": "String"
  },
  "sts:awsservicename": {
    "key": "sts:AWSServiceName",
    "description": "Filters access by the service that is obtaining a bearer token",
    "type": "String"
  },
  "sts:durationseconds": {
    "key": "sts:DurationSeconds",
    "description": "Filters access by the duration in seconds when getting a bearer token",
    "type": "String"
  },
  "sts:externalid": {
    "key": "sts:ExternalId",
    "description": "Filters access by the unique identifier required when you assume a role in another account",
    "type": "String"
  },
  "sts:requestcontext/${contextkey}": {
    "key": "sts:RequestContext/${ContextKey}",
    "description": "Filters access by the session context key-value pairs embedded in the signed context assertion retrieved from a trusted context provider",
    "type": "String"
  },
  "sts:requestcontextproviders": {
    "key": "sts:RequestContextProviders",
    "description": "Filters access by the context provider ARNs",
    "type": "ArrayOfARN"
  },
  "sts:rolesessionname": {
    "key": "sts:RoleSessionName",
    "description": "Filters access by the role session name required when you assume a role",
    "type": "String"
  },
  "sts:sourceidentity": {
    "key": "sts:SourceIdentity",
    "description": "Filters access by the source identity that is passed in the request",
    "type": "String"
  },
  "sts:taskpolicyarn": {
    "key": "sts:TaskPolicyArn",
    "description": "Filters access by TaskPolicyARN",
    "type": "String"
  },
  "sts:transitivetagkeys": {
    "key": "sts:TransitiveTagKeys",
    "description": "Filters access by the transitive tag keys that are passed in the request",
    "type": "ArrayOfString"
  },
  "www.amazon.com:app_id": {
    "key": "www.amazon.com:app_id",
    "description": "Filters access by the Login with Amazon application ID",
    "type": "String"
  },
  "www.amazon.com:user_id": {
    "key": "www.amazon.com:user_id",
    "description": "Filters access by the Login with Amazon user ID",
    "type": "String"
  }
}