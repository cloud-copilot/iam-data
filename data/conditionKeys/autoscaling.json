{
  "autoscaling:capacityreservationids": {
    "key": "autoscaling:CapacityReservationIds",
    "description": "Filters access based on the Capacity Reservation IDs",
    "type": "ArrayOfString"
  },
  "autoscaling:capacityreservationresourcegrouparns": {
    "key": "autoscaling:CapacityReservationResourceGroupArns",
    "description": "Filters access based on the ARN of a Capacity Reservation resource group",
    "type": "ArrayOfString"
  },
  "autoscaling:imageid": {
    "key": "autoscaling:ImageId",
    "description": "Filters access based on the AMI ID for the launch configuration",
    "type": "String"
  },
  "autoscaling:instancetype": {
    "key": "autoscaling:InstanceType",
    "description": "Filters access based on the instance type for the launch configuration",
    "type": "String"
  },
  "autoscaling:instancetypes": {
    "key": "autoscaling:InstanceTypes",
    "description": "Filters access based on the instance types present as overrides to a launch template for a mixed instances policy. Use it to qualify which instance types can be explicitly defined in the policy",
    "type": "String"
  },
  "autoscaling:launchconfigurationname": {
    "key": "autoscaling:LaunchConfigurationName",
    "description": "Filters access based on the name of a launch configuration",
    "type": "String"
  },
  "autoscaling:launchtemplateversionspecified": {
    "key": "autoscaling:LaunchTemplateVersionSpecified",
    "description": "Filters access based on whether users can specify any version of a launch template or only the Latest or Default version",
    "type": "Bool"
  },
  "autoscaling:loadbalancernames": {
    "key": "autoscaling:LoadBalancerNames",
    "description": "Filters access based on the name of the load balancer",
    "type": "ArrayOfString"
  },
  "autoscaling:maxsize": {
    "key": "autoscaling:MaxSize",
    "description": "Filters access based on the maximum scaling size in the request",
    "type": "Numeric"
  },
  "autoscaling:metadatahttpendpoint": {
    "key": "autoscaling:MetadataHttpEndpoint",
    "description": "Filters access based on whether the HTTP endpoint is enabled for the instance metadata service",
    "type": "String"
  },
  "autoscaling:metadatahttpputresponsehoplimit": {
    "key": "autoscaling:MetadataHttpPutResponseHopLimit",
    "description": "Filters access based on the allowed number of hops when calling the instance metadata service",
    "type": "Numeric"
  },
  "autoscaling:metadatahttptokens": {
    "key": "autoscaling:MetadataHttpTokens",
    "description": "Filters access based on whether tokens are required when calling the instance metadata service (optional or required)",
    "type": "String"
  },
  "autoscaling:minsize": {
    "key": "autoscaling:MinSize",
    "description": "Filters access based on the minimum scaling size in the request",
    "type": "Numeric"
  },
  "autoscaling:resourcetag/${tagkey}": {
    "key": "autoscaling:ResourceTag/${TagKey}",
    "description": "Filters access based on the tags associated with the resource",
    "type": "String"
  },
  "autoscaling:spotprice": {
    "key": "autoscaling:SpotPrice",
    "description": "Filters access based on the price for Spot Instances for the launch configuration",
    "type": "Numeric"
  },
  "autoscaling:targetgrouparns": {
    "key": "autoscaling:TargetGroupARNs",
    "description": "Filters access based on the ARN of a target group",
    "type": "ArrayOfARN"
  },
  "autoscaling:trafficsourceidentifiers": {
    "key": "autoscaling:TrafficSourceIdentifiers",
    "description": "Filters access based on the identifiers of the traffic sources",
    "type": "ArrayOfString"
  },
  "autoscaling:vpczoneidentifiers": {
    "key": "autoscaling:VPCZoneIdentifiers",
    "description": "Filters access based on the identifier of a VPC zone",
    "type": "ArrayOfString"
  },
  "aws:requesttag/${tagkey}": {
    "key": "aws:RequestTag/${TagKey}",
    "description": "Filters access based on the tags that are passed in the request",
    "type": "String"
  },
  "aws:resourcetag/${tagkey}": {
    "key": "aws:ResourceTag/${TagKey}",
    "description": "Filters access based on the tags associated with the resource",
    "type": "String"
  },
  "aws:tagkeys": {
    "key": "aws:TagKeys",
    "description": "Filters access based on the tag keys that are passed in the request",
    "type": "ArrayOfString"
  }
}