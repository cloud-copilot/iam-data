{
  "CreateBucket": {
    "name": "CreateBucket",
    "description": "Grants permission to create a new bucket",
    "accessLevel": "Write",
    "resourceTypes": [
      {
        "name": "bucket",
        "required": true,
        "conditionKeys": [],
        "dependentActions": []
      }
    ],
    "conditionKeys": [
      "s3express:authType",
      "s3express:LocationName",
      "s3express:ResourceAccount",
      "s3express:signatureversion",
      "s3express:TlsVersion",
      "s3express:x-amz-content-sha256"
    ],
    "dependentActions": []
  },
  "CreateSession": {
    "name": "CreateSession",
    "description": "Grants permission to Create Session token which is used for object APIs such as PutObject, GetObject, ect",
    "accessLevel": "Read",
    "resourceTypes": [
      {
        "name": "bucket",
        "required": true,
        "conditionKeys": [],
        "dependentActions": []
      }
    ],
    "conditionKeys": [
      "s3express:authType",
      "s3express:ResourceAccount",
      "s3express:SessionMode",
      "s3express:signatureAge",
      "s3express:signatureversion",
      "s3express:TlsVersion",
      "s3express:x-amz-content-sha256"
    ],
    "dependentActions": []
  },
  "DeleteBucket": {
    "name": "DeleteBucket",
    "description": "Grants permission to delete the bucket named in the URI",
    "accessLevel": "Write",
    "resourceTypes": [
      {
        "name": "bucket",
        "required": true,
        "conditionKeys": [],
        "dependentActions": []
      }
    ],
    "conditionKeys": [
      "s3express:authType",
      "s3express:ResourceAccount",
      "s3express:signatureversion",
      "s3express:TlsVersion",
      "s3express:x-amz-content-sha256"
    ],
    "dependentActions": []
  },
  "DeleteBucketPolicy": {
    "name": "DeleteBucketPolicy",
    "description": "Grants permission to delete the policy on a specified bucket",
    "accessLevel": "Permissions management",
    "resourceTypes": [
      {
        "name": "bucket",
        "required": true,
        "conditionKeys": [],
        "dependentActions": []
      }
    ],
    "conditionKeys": [
      "s3express:authType",
      "s3express:ResourceAccount",
      "s3express:signatureversion",
      "s3express:TlsVersion",
      "s3express:x-amz-content-sha256"
    ],
    "dependentActions": []
  },
  "GetBucketPolicy": {
    "name": "GetBucketPolicy",
    "description": "Grants permission to return the policy of the specified bucket",
    "accessLevel": "Read",
    "resourceTypes": [
      {
        "name": "bucket",
        "required": true,
        "conditionKeys": [],
        "dependentActions": []
      }
    ],
    "conditionKeys": [
      "s3express:authType",
      "s3express:ResourceAccount",
      "s3express:signatureversion",
      "s3express:TlsVersion",
      "s3express:x-amz-content-sha256"
    ],
    "dependentActions": []
  },
  "ListAllMyDirectoryBuckets": {
    "name": "ListAllMyDirectoryBuckets",
    "description": "Grants permission to list all directory buckets owned by the authenticated sender of the request",
    "accessLevel": "List",
    "resourceTypes": [],
    "conditionKeys": [
      "s3express:authType",
      "s3express:ResourceAccount",
      "s3express:signatureversion",
      "s3express:TlsVersion",
      "s3express:x-amz-content-sha256"
    ],
    "dependentActions": []
  },
  "PutBucketPolicy": {
    "name": "PutBucketPolicy",
    "description": "Grants permission to add or replace a bucket policy on a bucket",
    "accessLevel": "Permissions management",
    "resourceTypes": [
      {
        "name": "bucket",
        "required": true,
        "conditionKeys": [],
        "dependentActions": []
      }
    ],
    "conditionKeys": [
      "s3express:authType",
      "s3express:ResourceAccount",
      "s3express:signatureversion",
      "s3express:TlsVersion",
      "s3express:x-amz-content-sha256"
    ],
    "dependentActions": []
  }
}