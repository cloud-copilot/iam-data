{
  "AbortMultipartUpload": {
    "name": "AbortMultipartUpload",
    "description": "Grants permission to abort a multipart upload identified by the upload ID",
    "accessLevel": "Write",
    "resourceTypes": [
      {
        "name": "vault",
        "required": true,
        "conditionKeys": [],
        "dependentActions": []
      }
    ],
    "conditionKeys": [],
    "dependentActions": []
  },
  "AbortVaultLock": {
    "name": "AbortVaultLock",
    "description": "Grants permission to abort the vault locking process if the vault lock is not in the Locked state",
    "accessLevel": "Permissions management",
    "resourceTypes": [
      {
        "name": "vault",
        "required": true,
        "conditionKeys": [],
        "dependentActions": []
      }
    ],
    "conditionKeys": [],
    "dependentActions": []
  },
  "AddTagsToVault": {
    "name": "AddTagsToVault",
    "description": "Grants permission to add the specified tags to a vault",
    "accessLevel": "Tagging",
    "resourceTypes": [
      {
        "name": "vault",
        "required": true,
        "conditionKeys": [],
        "dependentActions": []
      }
    ],
    "conditionKeys": [
      "aws:TagKeys",
      "aws:RequestTag/${TagKey}"
    ],
    "dependentActions": []
  },
  "CompleteMultipartUpload": {
    "name": "CompleteMultipartUpload",
    "description": "Grants permission to complete a multipart upload process",
    "accessLevel": "Write",
    "resourceTypes": [
      {
        "name": "vault",
        "required": true,
        "conditionKeys": [],
        "dependentActions": []
      }
    ],
    "conditionKeys": [],
    "dependentActions": []
  },
  "CompleteVaultLock": {
    "name": "CompleteVaultLock",
    "description": "Grants permission to complete the vault locking process",
    "accessLevel": "Permissions management",
    "resourceTypes": [
      {
        "name": "vault",
        "required": true,
        "conditionKeys": [],
        "dependentActions": []
      }
    ],
    "conditionKeys": [],
    "dependentActions": []
  },
  "CreateVault": {
    "name": "CreateVault",
    "description": "Grants permission to create a new vault with the specified name",
    "accessLevel": "Write",
    "resourceTypes": [
      {
        "name": "vault",
        "required": true,
        "conditionKeys": [],
        "dependentActions": []
      }
    ],
    "conditionKeys": [],
    "dependentActions": []
  },
  "DeleteArchive": {
    "name": "DeleteArchive",
    "description": "Grants permission to delete an archive from a vault",
    "accessLevel": "Write",
    "resourceTypes": [
      {
        "name": "vault",
        "required": true,
        "conditionKeys": [],
        "dependentActions": []
      }
    ],
    "conditionKeys": [
      "glacier:ArchiveAgeInDays"
    ],
    "dependentActions": []
  },
  "DeleteVault": {
    "name": "DeleteVault",
    "description": "Grants permission to delete a vault",
    "accessLevel": "Write",
    "resourceTypes": [
      {
        "name": "vault",
        "required": true,
        "conditionKeys": [],
        "dependentActions": []
      }
    ],
    "conditionKeys": [],
    "dependentActions": []
  },
  "DeleteVaultAccessPolicy": {
    "name": "DeleteVaultAccessPolicy",
    "description": "Grants permission to delete the access policy associated with the specified vault",
    "accessLevel": "Permissions management",
    "resourceTypes": [
      {
        "name": "vault",
        "required": true,
        "conditionKeys": [],
        "dependentActions": []
      }
    ],
    "conditionKeys": [],
    "dependentActions": []
  },
  "DeleteVaultNotifications": {
    "name": "DeleteVaultNotifications",
    "description": "Grants permission to delete the notification configuration set for a vault",
    "accessLevel": "Write",
    "resourceTypes": [
      {
        "name": "vault",
        "required": true,
        "conditionKeys": [],
        "dependentActions": []
      }
    ],
    "conditionKeys": [],
    "dependentActions": []
  },
  "DescribeJob": {
    "name": "DescribeJob",
    "description": "Grants permission to get information about a job previously initiated",
    "accessLevel": "Read",
    "resourceTypes": [
      {
        "name": "vault",
        "required": true,
        "conditionKeys": [],
        "dependentActions": []
      }
    ],
    "conditionKeys": [],
    "dependentActions": []
  },
  "DescribeVault": {
    "name": "DescribeVault",
    "description": "Grants permission to get information about a vault",
    "accessLevel": "Read",
    "resourceTypes": [
      {
        "name": "vault",
        "required": true,
        "conditionKeys": [],
        "dependentActions": []
      }
    ],
    "conditionKeys": [],
    "dependentActions": []
  },
  "GetDataRetrievalPolicy": {
    "name": "GetDataRetrievalPolicy",
    "description": "Grants permission to get the data retrieval policy",
    "accessLevel": "Read",
    "resourceTypes": [],
    "conditionKeys": [],
    "dependentActions": []
  },
  "GetJobOutput": {
    "name": "GetJobOutput",
    "description": "Grants permission to download the output of the job specified",
    "accessLevel": "Read",
    "resourceTypes": [
      {
        "name": "vault",
        "required": true,
        "conditionKeys": [],
        "dependentActions": []
      }
    ],
    "conditionKeys": [],
    "dependentActions": []
  },
  "GetVaultAccessPolicy": {
    "name": "GetVaultAccessPolicy",
    "description": "Grants permission to retrieve the access-policy subresource set on the vault",
    "accessLevel": "Read",
    "resourceTypes": [
      {
        "name": "vault",
        "required": true,
        "conditionKeys": [],
        "dependentActions": []
      }
    ],
    "conditionKeys": [],
    "dependentActions": []
  },
  "GetVaultLock": {
    "name": "GetVaultLock",
    "description": "Grants permission to retrieve attributes from the lock-policy subresource set on the specified vault",
    "accessLevel": "Read",
    "resourceTypes": [
      {
        "name": "vault",
        "required": true,
        "conditionKeys": [],
        "dependentActions": []
      }
    ],
    "conditionKeys": [],
    "dependentActions": []
  },
  "GetVaultNotifications": {
    "name": "GetVaultNotifications",
    "description": "Grants permission to retrieve the notification-configuration subresource set on the vault",
    "accessLevel": "Read",
    "resourceTypes": [
      {
        "name": "vault",
        "required": true,
        "conditionKeys": [],
        "dependentActions": []
      }
    ],
    "conditionKeys": [],
    "dependentActions": []
  },
  "InitiateJob": {
    "name": "InitiateJob",
    "description": "Grants permission to initiate a job of the specified type",
    "accessLevel": "Write",
    "resourceTypes": [
      {
        "name": "vault",
        "required": true,
        "conditionKeys": [],
        "dependentActions": []
      }
    ],
    "conditionKeys": [
      "glacier:ArchiveAgeInDays"
    ],
    "dependentActions": []
  },
  "InitiateMultipartUpload": {
    "name": "InitiateMultipartUpload",
    "description": "Grants permission to initiate a multipart upload",
    "accessLevel": "Write",
    "resourceTypes": [
      {
        "name": "vault",
        "required": true,
        "conditionKeys": [],
        "dependentActions": []
      }
    ],
    "conditionKeys": [],
    "dependentActions": []
  },
  "InitiateVaultLock": {
    "name": "InitiateVaultLock",
    "description": "Grants permission to initiate the vault locking process",
    "accessLevel": "Permissions management",
    "resourceTypes": [
      {
        "name": "vault",
        "required": true,
        "conditionKeys": [],
        "dependentActions": []
      }
    ],
    "conditionKeys": [],
    "dependentActions": []
  },
  "ListJobs": {
    "name": "ListJobs",
    "description": "Grants permission to list jobs for a vault that are in-progress and jobs that have recently finished",
    "accessLevel": "List",
    "resourceTypes": [
      {
        "name": "vault",
        "required": true,
        "conditionKeys": [],
        "dependentActions": []
      }
    ],
    "conditionKeys": [],
    "dependentActions": []
  },
  "ListMultipartUploads": {
    "name": "ListMultipartUploads",
    "description": "Grants permission to list in-progress multipart uploads for the specified vault",
    "accessLevel": "List",
    "resourceTypes": [
      {
        "name": "vault",
        "required": true,
        "conditionKeys": [],
        "dependentActions": []
      }
    ],
    "conditionKeys": [],
    "dependentActions": []
  },
  "ListParts": {
    "name": "ListParts",
    "description": "Grants permission to list the parts of an archive that have been uploaded in a specific multipart upload",
    "accessLevel": "List",
    "resourceTypes": [
      {
        "name": "vault",
        "required": true,
        "conditionKeys": [],
        "dependentActions": []
      }
    ],
    "conditionKeys": [],
    "dependentActions": []
  },
  "ListProvisionedCapacity": {
    "name": "ListProvisionedCapacity",
    "description": "Grants permission to list the provisioned capacity for the specified AWS account",
    "accessLevel": "List",
    "resourceTypes": [],
    "conditionKeys": [],
    "dependentActions": []
  },
  "ListTagsForVault": {
    "name": "ListTagsForVault",
    "description": "Grants permission to list all the tags attached to a vault",
    "accessLevel": "List",
    "resourceTypes": [
      {
        "name": "vault",
        "required": true,
        "conditionKeys": [],
        "dependentActions": []
      }
    ],
    "conditionKeys": [],
    "dependentActions": []
  },
  "ListVaults": {
    "name": "ListVaults",
    "description": "Grants permission to list all vaults",
    "accessLevel": "List",
    "resourceTypes": [],
    "conditionKeys": [],
    "dependentActions": []
  },
  "PurchaseProvisionedCapacity": {
    "name": "PurchaseProvisionedCapacity",
    "description": "Grants permission to purchases a provisioned capacity unit for an AWS account",
    "accessLevel": "Write",
    "resourceTypes": [],
    "conditionKeys": [],
    "dependentActions": []
  },
  "RemoveTagsFromVault": {
    "name": "RemoveTagsFromVault",
    "description": "Grants permission to remove one or more tags from the set of tags attached to a vault",
    "accessLevel": "Tagging",
    "resourceTypes": [
      {
        "name": "vault",
        "required": true,
        "conditionKeys": [],
        "dependentActions": []
      }
    ],
    "conditionKeys": [],
    "dependentActions": []
  },
  "SetDataRetrievalPolicy": {
    "name": "SetDataRetrievalPolicy",
    "description": "Grants permission to set and then enacts a data retrieval policy in the region specified in the PUT request",
    "accessLevel": "Permissions management",
    "resourceTypes": [],
    "conditionKeys": [],
    "dependentActions": []
  },
  "SetVaultAccessPolicy": {
    "name": "SetVaultAccessPolicy",
    "description": "Grants permission to configure an access policy for a vault; will overwrite an existing policy",
    "accessLevel": "Permissions management",
    "resourceTypes": [
      {
        "name": "vault",
        "required": true,
        "conditionKeys": [],
        "dependentActions": []
      }
    ],
    "conditionKeys": [],
    "dependentActions": []
  },
  "SetVaultNotifications": {
    "name": "SetVaultNotifications",
    "description": "Grants permission to configure vault notifications",
    "accessLevel": "Write",
    "resourceTypes": [
      {
        "name": "vault",
        "required": true,
        "conditionKeys": [],
        "dependentActions": []
      }
    ],
    "conditionKeys": [],
    "dependentActions": []
  },
  "UploadArchive": {
    "name": "UploadArchive",
    "description": "Grants permission to upload an archive to a vault",
    "accessLevel": "Write",
    "resourceTypes": [
      {
        "name": "vault",
        "required": true,
        "conditionKeys": [],
        "dependentActions": []
      }
    ],
    "conditionKeys": [],
    "dependentActions": []
  },
  "UploadMultipartPart": {
    "name": "UploadMultipartPart",
    "description": "Grants permission to upload a part of an archive",
    "accessLevel": "Write",
    "resourceTypes": [
      {
        "name": "vault",
        "required": true,
        "conditionKeys": [],
        "dependentActions": []
      }
    ],
    "conditionKeys": [],
    "dependentActions": []
  }
}