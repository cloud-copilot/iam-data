{
  "AbortMultipartUpload": {
    "name": "AbortMultipartUpload",
    "description": "Grants permission to abort a multipart upload",
    "accessLevel": "Write",
    "resourceTypes": [
      {
        "name": "objectlambdaaccesspoint",
        "required": true,
        "conditionKeys": [],
        "dependentActions": []
      }
    ],
    "conditionKeys": [
      "s3-object-lambda:authType",
      "s3-object-lambda:signatureAge",
      "s3-object-lambda:TlsVersion"
    ],
    "dependentActions": []
  },
  "DeleteObject": {
    "name": "DeleteObject",
    "description": "Grants permission to remove the null version of an object and insert a delete marker, which becomes the current version of the object",
    "accessLevel": "Write",
    "resourceTypes": [
      {
        "name": "objectlambdaaccesspoint",
        "required": true,
        "conditionKeys": [],
        "dependentActions": []
      }
    ],
    "conditionKeys": [
      "s3-object-lambda:authType",
      "s3-object-lambda:signatureAge",
      "s3-object-lambda:TlsVersion"
    ],
    "dependentActions": []
  },
  "DeleteObjectTagging": {
    "name": "DeleteObjectTagging",
    "description": "Grants permission to use the tagging subresource to remove the entire tag set from the specified object",
    "accessLevel": "Tagging",
    "resourceTypes": [
      {
        "name": "objectlambdaaccesspoint",
        "required": true,
        "conditionKeys": [],
        "dependentActions": []
      }
    ],
    "conditionKeys": [
      "s3-object-lambda:authType",
      "s3-object-lambda:signatureAge",
      "s3-object-lambda:TlsVersion"
    ],
    "dependentActions": []
  },
  "DeleteObjectVersion": {
    "name": "DeleteObjectVersion",
    "description": "Grants permission to remove a specific version of an object",
    "accessLevel": "Write",
    "resourceTypes": [
      {
        "name": "objectlambdaaccesspoint",
        "required": true,
        "conditionKeys": [],
        "dependentActions": []
      }
    ],
    "conditionKeys": [
      "s3-object-lambda:authType",
      "s3-object-lambda:signatureAge",
      "s3-object-lambda:TlsVersion",
      "s3-object-lambda:versionid"
    ],
    "dependentActions": []
  },
  "DeleteObjectVersionTagging": {
    "name": "DeleteObjectVersionTagging",
    "description": "Grants permission to remove the entire tag set for a specific version of the object",
    "accessLevel": "Tagging",
    "resourceTypes": [
      {
        "name": "objectlambdaaccesspoint",
        "required": true,
        "conditionKeys": [],
        "dependentActions": []
      }
    ],
    "conditionKeys": [
      "s3-object-lambda:authType",
      "s3-object-lambda:signatureAge",
      "s3-object-lambda:TlsVersion",
      "s3-object-lambda:versionid"
    ],
    "dependentActions": []
  },
  "GetObject": {
    "name": "GetObject",
    "description": "Grants permission to retrieve objects from Amazon S3",
    "accessLevel": "Read",
    "resourceTypes": [
      {
        "name": "objectlambdaaccesspoint",
        "required": true,
        "conditionKeys": [],
        "dependentActions": []
      }
    ],
    "conditionKeys": [
      "s3-object-lambda:authType",
      "s3-object-lambda:signatureAge",
      "s3-object-lambda:TlsVersion"
    ],
    "dependentActions": []
  },
  "GetObjectAcl": {
    "name": "GetObjectAcl",
    "description": "Grants permission to return the access control list (ACL) of an object",
    "accessLevel": "Read",
    "resourceTypes": [
      {
        "name": "objectlambdaaccesspoint",
        "required": true,
        "conditionKeys": [],
        "dependentActions": []
      }
    ],
    "conditionKeys": [
      "s3-object-lambda:authType",
      "s3-object-lambda:signatureAge",
      "s3-object-lambda:TlsVersion"
    ],
    "dependentActions": []
  },
  "GetObjectLegalHold": {
    "name": "GetObjectLegalHold",
    "description": "Grants permission to get an object's current Legal Hold status",
    "accessLevel": "Read",
    "resourceTypes": [
      {
        "name": "objectlambdaaccesspoint",
        "required": true,
        "conditionKeys": [],
        "dependentActions": []
      }
    ],
    "conditionKeys": [
      "s3-object-lambda:authType",
      "s3-object-lambda:signatureAge",
      "s3-object-lambda:TlsVersion"
    ],
    "dependentActions": []
  },
  "GetObjectRetention": {
    "name": "GetObjectRetention",
    "description": "Grants permission to retrieve the retention settings for an object",
    "accessLevel": "Read",
    "resourceTypes": [
      {
        "name": "objectlambdaaccesspoint",
        "required": true,
        "conditionKeys": [],
        "dependentActions": []
      }
    ],
    "conditionKeys": [
      "s3-object-lambda:authType",
      "s3-object-lambda:signatureAge",
      "s3-object-lambda:TlsVersion"
    ],
    "dependentActions": []
  },
  "GetObjectTagging": {
    "name": "GetObjectTagging",
    "description": "Grants permission to return the tag set of an object",
    "accessLevel": "Read",
    "resourceTypes": [
      {
        "name": "objectlambdaaccesspoint",
        "required": true,
        "conditionKeys": [],
        "dependentActions": []
      }
    ],
    "conditionKeys": [
      "s3-object-lambda:authType",
      "s3-object-lambda:signatureAge",
      "s3-object-lambda:TlsVersion"
    ],
    "dependentActions": []
  },
  "GetObjectVersion": {
    "name": "GetObjectVersion",
    "description": "Grants permission to retrieve a specific version of an object",
    "accessLevel": "Read",
    "resourceTypes": [
      {
        "name": "objectlambdaaccesspoint",
        "required": true,
        "conditionKeys": [],
        "dependentActions": []
      }
    ],
    "conditionKeys": [
      "s3-object-lambda:authType",
      "s3-object-lambda:signatureAge",
      "s3-object-lambda:TlsVersion",
      "s3-object-lambda:versionid"
    ],
    "dependentActions": []
  },
  "GetObjectVersionAcl": {
    "name": "GetObjectVersionAcl",
    "description": "Grants permission to return the access control list (ACL) of a specific object version",
    "accessLevel": "Read",
    "resourceTypes": [
      {
        "name": "objectlambdaaccesspoint",
        "required": true,
        "conditionKeys": [],
        "dependentActions": []
      }
    ],
    "conditionKeys": [
      "s3-object-lambda:authType",
      "s3-object-lambda:signatureAge",
      "s3-object-lambda:TlsVersion",
      "s3-object-lambda:versionid"
    ],
    "dependentActions": []
  },
  "GetObjectVersionTagging": {
    "name": "GetObjectVersionTagging",
    "description": "Grants permission to return the tag set for a specific version of the object",
    "accessLevel": "Read",
    "resourceTypes": [
      {
        "name": "objectlambdaaccesspoint",
        "required": true,
        "conditionKeys": [],
        "dependentActions": []
      }
    ],
    "conditionKeys": [
      "s3-object-lambda:authType",
      "s3-object-lambda:signatureAge",
      "s3-object-lambda:TlsVersion",
      "s3-object-lambda:versionid"
    ],
    "dependentActions": []
  },
  "ListBucket": {
    "name": "ListBucket",
    "description": "Grants permission to list some or all of the objects in an Amazon S3 bucket (up to 1000)",
    "accessLevel": "List",
    "resourceTypes": [
      {
        "name": "objectlambdaaccesspoint",
        "required": true,
        "conditionKeys": [],
        "dependentActions": []
      }
    ],
    "conditionKeys": [
      "s3-object-lambda:authType",
      "s3-object-lambda:signatureAge",
      "s3-object-lambda:TlsVersion"
    ],
    "dependentActions": []
  },
  "ListBucketMultipartUploads": {
    "name": "ListBucketMultipartUploads",
    "description": "Grants permission to list in-progress multipart uploads",
    "accessLevel": "List",
    "resourceTypes": [
      {
        "name": "objectlambdaaccesspoint",
        "required": true,
        "conditionKeys": [],
        "dependentActions": []
      }
    ],
    "conditionKeys": [
      "s3-object-lambda:authType",
      "s3-object-lambda:signatureAge",
      "s3-object-lambda:TlsVersion"
    ],
    "dependentActions": []
  },
  "ListBucketVersions": {
    "name": "ListBucketVersions",
    "description": "Grants permission to list metadata about all the versions of objects in an Amazon S3 bucket",
    "accessLevel": "List",
    "resourceTypes": [
      {
        "name": "objectlambdaaccesspoint",
        "required": true,
        "conditionKeys": [],
        "dependentActions": []
      }
    ],
    "conditionKeys": [
      "s3-object-lambda:authType",
      "s3-object-lambda:signatureAge",
      "s3-object-lambda:TlsVersion"
    ],
    "dependentActions": []
  },
  "ListMultipartUploadParts": {
    "name": "ListMultipartUploadParts",
    "description": "Grants permission to list the parts that have been uploaded for a specific multipart upload",
    "accessLevel": "List",
    "resourceTypes": [
      {
        "name": "objectlambdaaccesspoint",
        "required": true,
        "conditionKeys": [],
        "dependentActions": []
      }
    ],
    "conditionKeys": [
      "s3-object-lambda:authType",
      "s3-object-lambda:signatureAge",
      "s3-object-lambda:TlsVersion"
    ],
    "dependentActions": []
  },
  "PutObject": {
    "name": "PutObject",
    "description": "Grants permission to add an object to a bucket",
    "accessLevel": "Write",
    "resourceTypes": [
      {
        "name": "objectlambdaaccesspoint",
        "required": true,
        "conditionKeys": [],
        "dependentActions": []
      }
    ],
    "conditionKeys": [
      "s3-object-lambda:authType",
      "s3-object-lambda:signatureAge",
      "s3-object-lambda:TlsVersion"
    ],
    "dependentActions": []
  },
  "PutObjectAcl": {
    "name": "PutObjectAcl",
    "description": "Grants permission to set the access control list (ACL) permissions for new or existing objects in an S3 bucket",
    "accessLevel": "Permissions management",
    "resourceTypes": [
      {
        "name": "objectlambdaaccesspoint",
        "required": true,
        "conditionKeys": [],
        "dependentActions": []
      }
    ],
    "conditionKeys": [
      "s3-object-lambda:authType",
      "s3-object-lambda:signatureAge",
      "s3-object-lambda:TlsVersion"
    ],
    "dependentActions": []
  },
  "PutObjectLegalHold": {
    "name": "PutObjectLegalHold",
    "description": "Grants permission to apply a Legal Hold configuration to the specified object",
    "accessLevel": "Write",
    "resourceTypes": [
      {
        "name": "objectlambdaaccesspoint",
        "required": true,
        "conditionKeys": [],
        "dependentActions": []
      }
    ],
    "conditionKeys": [
      "s3-object-lambda:authType",
      "s3-object-lambda:signatureAge",
      "s3-object-lambda:TlsVersion"
    ],
    "dependentActions": []
  },
  "PutObjectRetention": {
    "name": "PutObjectRetention",
    "description": "Grants permission to place an Object Retention configuration on an object",
    "accessLevel": "Write",
    "resourceTypes": [
      {
        "name": "objectlambdaaccesspoint",
        "required": true,
        "conditionKeys": [],
        "dependentActions": []
      }
    ],
    "conditionKeys": [
      "s3-object-lambda:authType",
      "s3-object-lambda:signatureAge",
      "s3-object-lambda:TlsVersion"
    ],
    "dependentActions": []
  },
  "PutObjectTagging": {
    "name": "PutObjectTagging",
    "description": "Grants permission to set the supplied tag-set to an object that already exists in a bucket",
    "accessLevel": "Tagging",
    "resourceTypes": [
      {
        "name": "objectlambdaaccesspoint",
        "required": true,
        "conditionKeys": [],
        "dependentActions": []
      }
    ],
    "conditionKeys": [
      "s3-object-lambda:authType",
      "s3-object-lambda:signatureAge",
      "s3-object-lambda:TlsVersion"
    ],
    "dependentActions": []
  },
  "PutObjectVersionAcl": {
    "name": "PutObjectVersionAcl",
    "description": "Grants permission to use the acl subresource to set the access control list (ACL) permissions for an object that already exists in a bucket",
    "accessLevel": "Permissions management",
    "resourceTypes": [
      {
        "name": "objectlambdaaccesspoint",
        "required": true,
        "conditionKeys": [],
        "dependentActions": []
      }
    ],
    "conditionKeys": [
      "s3-object-lambda:authType",
      "s3-object-lambda:signatureAge",
      "s3-object-lambda:TlsVersion",
      "s3-object-lambda:versionid"
    ],
    "dependentActions": []
  },
  "PutObjectVersionTagging": {
    "name": "PutObjectVersionTagging",
    "description": "Grants permission to set the supplied tag-set for a specific version of an object",
    "accessLevel": "Tagging",
    "resourceTypes": [
      {
        "name": "objectlambdaaccesspoint",
        "required": true,
        "conditionKeys": [],
        "dependentActions": []
      }
    ],
    "conditionKeys": [
      "s3-object-lambda:authType",
      "s3-object-lambda:signatureAge",
      "s3-object-lambda:TlsVersion",
      "s3-object-lambda:versionid"
    ],
    "dependentActions": []
  },
  "RestoreObject": {
    "name": "RestoreObject",
    "description": "Grants permission to restore an archived copy of an object back into Amazon S3",
    "accessLevel": "Write",
    "resourceTypes": [
      {
        "name": "objectlambdaaccesspoint",
        "required": true,
        "conditionKeys": [],
        "dependentActions": []
      }
    ],
    "conditionKeys": [
      "s3-object-lambda:authType",
      "s3-object-lambda:signatureAge",
      "s3-object-lambda:TlsVersion"
    ],
    "dependentActions": []
  },
  "WriteGetObjectResponse": {
    "name": "WriteGetObjectResponse",
    "description": "Grants permission to provide data for GetObject requests send to S3 Object Lambda",
    "accessLevel": "Write",
    "resourceTypes": [
      {
        "name": "objectlambdaaccesspoint",
        "required": true,
        "conditionKeys": [],
        "dependentActions": []
      }
    ],
    "conditionKeys": [
      "s3-object-lambda:authType",
      "s3-object-lambda:signatureAge",
      "s3-object-lambda:TlsVersion"
    ],
    "dependentActions": []
  }
}