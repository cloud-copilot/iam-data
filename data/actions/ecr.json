{
  "BatchCheckLayerAvailability": {
    "name": "BatchCheckLayerAvailability",
    "description": "Grants permission to check the availability of multiple image layers in a specified registry and repository",
    "accessLevel": "Read",
    "resourceTypes": [
      {
        "name": "repository",
        "required": true,
        "conditionKeys": [],
        "dependentActions": []
      }
    ],
    "conditionKeys": [],
    "dependentActions": []
  },
  "BatchDeleteImage": {
    "name": "BatchDeleteImage",
    "description": "Grants permission to delete a list of specified images within a specified repository",
    "accessLevel": "Write",
    "resourceTypes": [
      {
        "name": "repository",
        "required": true,
        "conditionKeys": [],
        "dependentActions": []
      }
    ],
    "conditionKeys": [],
    "dependentActions": []
  },
  "BatchGetImage": {
    "name": "BatchGetImage",
    "description": "Grants permission to get detailed information for specified images within a specified repository",
    "accessLevel": "Read",
    "resourceTypes": [
      {
        "name": "repository",
        "required": true,
        "conditionKeys": [],
        "dependentActions": []
      }
    ],
    "conditionKeys": [],
    "dependentActions": []
  },
  "BatchGetRepositoryScanningConfiguration": {
    "name": "BatchGetRepositoryScanningConfiguration",
    "description": "Grants permission to retrieve repository scanning configuration for a list of repositories",
    "accessLevel": "Read",
    "resourceTypes": [
      {
        "name": "repository",
        "required": true,
        "conditionKeys": [],
        "dependentActions": []
      }
    ],
    "conditionKeys": [],
    "dependentActions": []
  },
  "BatchImportUpstreamImage": {
    "name": "BatchImportUpstreamImage",
    "isPermissionOnly": true,
    "description": "Grants permission to retrieve the image from the upstream registry and import it to your private registry",
    "accessLevel": "Write",
    "resourceTypes": [],
    "conditionKeys": [],
    "dependentActions": []
  },
  "CompleteLayerUpload": {
    "name": "CompleteLayerUpload",
    "description": "Grants permission to inform Amazon ECR that the image layer upload for a specified registry, repository name, and upload ID, has completed",
    "accessLevel": "Write",
    "resourceTypes": [
      {
        "name": "repository",
        "required": true,
        "conditionKeys": [],
        "dependentActions": []
      }
    ],
    "conditionKeys": [],
    "dependentActions": []
  },
  "CreatePullThroughCacheRule": {
    "name": "CreatePullThroughCacheRule",
    "description": "Grants permission to create new pull-through cache rule",
    "accessLevel": "Write",
    "resourceTypes": [],
    "conditionKeys": [],
    "dependentActions": [
      "iam:CreateServiceLinkedRole"
    ]
  },
  "CreateRepository": {
    "name": "CreateRepository",
    "description": "Grants permission to create an image repository",
    "accessLevel": "Write",
    "resourceTypes": [
      {
        "name": "repository",
        "required": true,
        "conditionKeys": [],
        "dependentActions": [
          "ecr:TagResource"
        ]
      }
    ],
    "conditionKeys": [
      "aws:RequestTag/${TagKey}",
      "aws:TagKeys"
    ],
    "dependentActions": []
  },
  "CreateRepositoryCreationTemplate": {
    "name": "CreateRepositoryCreationTemplate",
    "description": "Grants permission to create the repository creation template",
    "accessLevel": "Write",
    "resourceTypes": [],
    "conditionKeys": [],
    "dependentActions": [
      "ecr:CreateRepository",
      "ecr:PutLifecyclePolicy",
      "ecr:SetRepositoryPolicy",
      "iam:CreateServiceLinkedRole",
      "iam:PassRole"
    ]
  },
  "DeleteLifecyclePolicy": {
    "name": "DeleteLifecyclePolicy",
    "description": "Grants permission to delete the specified lifecycle policy",
    "accessLevel": "Write",
    "resourceTypes": [
      {
        "name": "repository",
        "required": true,
        "conditionKeys": [],
        "dependentActions": []
      }
    ],
    "conditionKeys": [],
    "dependentActions": []
  },
  "DeletePullThroughCacheRule": {
    "name": "DeletePullThroughCacheRule",
    "description": "Grants permission to delete the pull-through cache rule",
    "accessLevel": "Write",
    "resourceTypes": [],
    "conditionKeys": [],
    "dependentActions": []
  },
  "DeleteRegistryPolicy": {
    "name": "DeleteRegistryPolicy",
    "description": "Grants permission to delete the registry policy",
    "accessLevel": "Permissions management",
    "resourceTypes": [],
    "conditionKeys": [],
    "dependentActions": []
  },
  "DeleteRepository": {
    "name": "DeleteRepository",
    "description": "Grants permission to delete an existing image repository",
    "accessLevel": "Write",
    "resourceTypes": [
      {
        "name": "repository",
        "required": true,
        "conditionKeys": [],
        "dependentActions": []
      }
    ],
    "conditionKeys": [],
    "dependentActions": []
  },
  "DeleteRepositoryCreationTemplate": {
    "name": "DeleteRepositoryCreationTemplate",
    "description": "Grants permission to delete the repository creation template",
    "accessLevel": "Write",
    "resourceTypes": [],
    "conditionKeys": [],
    "dependentActions": []
  },
  "DeleteRepositoryPolicy": {
    "name": "DeleteRepositoryPolicy",
    "description": "Grants permission to delete the repository policy from a specified repository",
    "accessLevel": "Permissions management",
    "resourceTypes": [
      {
        "name": "repository",
        "required": true,
        "conditionKeys": [],
        "dependentActions": []
      }
    ],
    "conditionKeys": [],
    "dependentActions": []
  },
  "DescribeImageReplicationStatus": {
    "name": "DescribeImageReplicationStatus",
    "description": "Grants permission to retrieve replication status about an image in a registry, including failure reason if replication fails",
    "accessLevel": "Read",
    "resourceTypes": [
      {
        "name": "repository",
        "required": true,
        "conditionKeys": [],
        "dependentActions": []
      }
    ],
    "conditionKeys": [],
    "dependentActions": []
  },
  "DescribeImageScanFindings": {
    "name": "DescribeImageScanFindings",
    "description": "Grants permission to describe the image scan findings for the specified image",
    "accessLevel": "Read",
    "resourceTypes": [
      {
        "name": "repository",
        "required": true,
        "conditionKeys": [],
        "dependentActions": []
      }
    ],
    "conditionKeys": [],
    "dependentActions": []
  },
  "DescribeImages": {
    "name": "DescribeImages",
    "description": "Grants permission to get metadata about the images in a repository, including image size, image tags, and creation date",
    "accessLevel": "List",
    "resourceTypes": [
      {
        "name": "repository",
        "required": true,
        "conditionKeys": [],
        "dependentActions": []
      }
    ],
    "conditionKeys": [],
    "dependentActions": []
  },
  "DescribePullThroughCacheRules": {
    "name": "DescribePullThroughCacheRules",
    "description": "Grants permission to describe the pull-through cache rules",
    "accessLevel": "List",
    "resourceTypes": [],
    "conditionKeys": [],
    "dependentActions": []
  },
  "DescribeRegistry": {
    "name": "DescribeRegistry",
    "description": "Grants permission to describe the registry settings",
    "accessLevel": "Read",
    "resourceTypes": [],
    "conditionKeys": [],
    "dependentActions": []
  },
  "DescribeRepositories": {
    "name": "DescribeRepositories",
    "description": "Grants permission to describe image repositories in a registry",
    "accessLevel": "Read",
    "resourceTypes": [
      {
        "name": "repository",
        "required": true,
        "conditionKeys": [],
        "dependentActions": []
      }
    ],
    "conditionKeys": [],
    "dependentActions": []
  },
  "DescribeRepositoryCreationTemplates": {
    "name": "DescribeRepositoryCreationTemplates",
    "description": "Grants permission to describe the repository creation template",
    "accessLevel": "Read",
    "resourceTypes": [],
    "conditionKeys": [],
    "dependentActions": []
  },
  "GetAccountSetting": {
    "name": "GetAccountSetting",
    "description": "Grants permission to retrieve account settings",
    "accessLevel": "Read",
    "resourceTypes": [],
    "conditionKeys": [],
    "dependentActions": []
  },
  "GetAuthorizationToken": {
    "name": "GetAuthorizationToken",
    "description": "Grants permission to retrieve a token that is valid for a specified registry for 12 hours",
    "accessLevel": "Read",
    "resourceTypes": [],
    "conditionKeys": [],
    "dependentActions": []
  },
  "GetDownloadUrlForLayer": {
    "name": "GetDownloadUrlForLayer",
    "description": "Grants permission to retrieve the download URL corresponding to an image layer",
    "accessLevel": "Read",
    "resourceTypes": [
      {
        "name": "repository",
        "required": true,
        "conditionKeys": [],
        "dependentActions": []
      }
    ],
    "conditionKeys": [],
    "dependentActions": []
  },
  "GetLifecyclePolicy": {
    "name": "GetLifecyclePolicy",
    "description": "Grants permission to retrieve the specified lifecycle policy",
    "accessLevel": "Read",
    "resourceTypes": [
      {
        "name": "repository",
        "required": true,
        "conditionKeys": [],
        "dependentActions": []
      }
    ],
    "conditionKeys": [],
    "dependentActions": []
  },
  "GetLifecyclePolicyPreview": {
    "name": "GetLifecyclePolicyPreview",
    "description": "Grants permission to retrieve the results of the specified lifecycle policy preview request",
    "accessLevel": "Read",
    "resourceTypes": [
      {
        "name": "repository",
        "required": true,
        "conditionKeys": [],
        "dependentActions": []
      }
    ],
    "conditionKeys": [],
    "dependentActions": []
  },
  "GetRegistryPolicy": {
    "name": "GetRegistryPolicy",
    "description": "Grants permission to retrieve the registry policy",
    "accessLevel": "Read",
    "resourceTypes": [],
    "conditionKeys": [],
    "dependentActions": []
  },
  "GetRegistryScanningConfiguration": {
    "name": "GetRegistryScanningConfiguration",
    "description": "Grants permission to retrieve registry scanning configuration",
    "accessLevel": "Read",
    "resourceTypes": [],
    "conditionKeys": [],
    "dependentActions": []
  },
  "GetRepositoryPolicy": {
    "name": "GetRepositoryPolicy",
    "description": "Grants permission to retrieve the repository policy for a specified repository",
    "accessLevel": "Read",
    "resourceTypes": [
      {
        "name": "repository",
        "required": true,
        "conditionKeys": [],
        "dependentActions": []
      }
    ],
    "conditionKeys": [],
    "dependentActions": []
  },
  "InitiateLayerUpload": {
    "name": "InitiateLayerUpload",
    "description": "Grants permission to notify Amazon ECR that you intend to upload an image layer",
    "accessLevel": "Write",
    "resourceTypes": [
      {
        "name": "repository",
        "required": true,
        "conditionKeys": [],
        "dependentActions": []
      }
    ],
    "conditionKeys": [],
    "dependentActions": []
  },
  "ListImages": {
    "name": "ListImages",
    "description": "Grants permission to list all the image IDs for a given repository",
    "accessLevel": "List",
    "resourceTypes": [
      {
        "name": "repository",
        "required": true,
        "conditionKeys": [],
        "dependentActions": []
      }
    ],
    "conditionKeys": [],
    "dependentActions": []
  },
  "ListTagsForResource": {
    "name": "ListTagsForResource",
    "description": "Grants permission to list the tags for an Amazon ECR resource",
    "accessLevel": "Read",
    "resourceTypes": [
      {
        "name": "repository",
        "required": true,
        "conditionKeys": [],
        "dependentActions": []
      }
    ],
    "conditionKeys": [
      "aws:RequestTag/${TagKey}",
      "aws:TagKeys"
    ],
    "dependentActions": []
  },
  "PutAccountSetting": {
    "name": "PutAccountSetting",
    "description": "Grants permission to update account settings",
    "accessLevel": "Write",
    "resourceTypes": [],
    "conditionKeys": [],
    "dependentActions": []
  },
  "PutImage": {
    "name": "PutImage",
    "description": "Grants permission to create or update the image manifest associated with an image",
    "accessLevel": "Write",
    "resourceTypes": [
      {
        "name": "repository",
        "required": true,
        "conditionKeys": [],
        "dependentActions": []
      }
    ],
    "conditionKeys": [],
    "dependentActions": []
  },
  "PutImageScanningConfiguration": {
    "name": "PutImageScanningConfiguration",
    "description": "Grants permission to update the image scanning configuration for a repository",
    "accessLevel": "Write",
    "resourceTypes": [
      {
        "name": "repository",
        "required": true,
        "conditionKeys": [],
        "dependentActions": []
      }
    ],
    "conditionKeys": [],
    "dependentActions": []
  },
  "PutImageTagMutability": {
    "name": "PutImageTagMutability",
    "description": "Grants permission to update the image tag mutability settings for a repository",
    "accessLevel": "Write",
    "resourceTypes": [
      {
        "name": "repository",
        "required": true,
        "conditionKeys": [],
        "dependentActions": []
      }
    ],
    "conditionKeys": [],
    "dependentActions": []
  },
  "PutLifecyclePolicy": {
    "name": "PutLifecyclePolicy",
    "description": "Grants permission to create or update a lifecycle policy",
    "accessLevel": "Write",
    "resourceTypes": [
      {
        "name": "repository",
        "required": true,
        "conditionKeys": [],
        "dependentActions": []
      }
    ],
    "conditionKeys": [],
    "dependentActions": []
  },
  "PutRegistryPolicy": {
    "name": "PutRegistryPolicy",
    "description": "Grants permission to update the registry policy",
    "accessLevel": "Permissions management",
    "resourceTypes": [],
    "conditionKeys": [],
    "dependentActions": []
  },
  "PutRegistryScanningConfiguration": {
    "name": "PutRegistryScanningConfiguration",
    "description": "Grants permission to update registry scanning configuration",
    "accessLevel": "Write",
    "resourceTypes": [],
    "conditionKeys": [],
    "dependentActions": []
  },
  "PutReplicationConfiguration": {
    "name": "PutReplicationConfiguration",
    "description": "Grants permission to update the replication configuration for the registry",
    "accessLevel": "Write",
    "resourceTypes": [],
    "conditionKeys": [],
    "dependentActions": [
      "iam:CreateServiceLinkedRole"
    ]
  },
  "ReplicateImage": {
    "name": "ReplicateImage",
    "isPermissionOnly": true,
    "description": "Grants permission to replicate images to the destination registry",
    "accessLevel": "Write",
    "resourceTypes": [
      {
        "name": "repository",
        "required": true,
        "conditionKeys": [],
        "dependentActions": []
      }
    ],
    "conditionKeys": [],
    "dependentActions": []
  },
  "SetRepositoryPolicy": {
    "name": "SetRepositoryPolicy",
    "description": "Grants permission to apply a repository policy on a specified repository to control access permissions",
    "accessLevel": "Permissions management",
    "resourceTypes": [
      {
        "name": "repository",
        "required": true,
        "conditionKeys": [],
        "dependentActions": []
      }
    ],
    "conditionKeys": [],
    "dependentActions": []
  },
  "StartImageScan": {
    "name": "StartImageScan",
    "description": "Grants permission to start an image scan",
    "accessLevel": "Write",
    "resourceTypes": [
      {
        "name": "repository",
        "required": true,
        "conditionKeys": [],
        "dependentActions": []
      }
    ],
    "conditionKeys": [],
    "dependentActions": []
  },
  "StartLifecyclePolicyPreview": {
    "name": "StartLifecyclePolicyPreview",
    "description": "Grants permission to start a preview of the specified lifecycle policy",
    "accessLevel": "Write",
    "resourceTypes": [
      {
        "name": "repository",
        "required": true,
        "conditionKeys": [],
        "dependentActions": []
      }
    ],
    "conditionKeys": [],
    "dependentActions": []
  },
  "TagResource": {
    "name": "TagResource",
    "description": "Grants permission to tag an Amazon ECR resource",
    "accessLevel": "Tagging",
    "resourceTypes": [
      {
        "name": "repository",
        "required": true,
        "conditionKeys": [],
        "dependentActions": []
      }
    ],
    "conditionKeys": [
      "aws:RequestTag/${TagKey}",
      "aws:TagKeys"
    ],
    "dependentActions": []
  },
  "UntagResource": {
    "name": "UntagResource",
    "description": "Grants permission to untag an Amazon ECR resource",
    "accessLevel": "Tagging",
    "resourceTypes": [
      {
        "name": "repository",
        "required": true,
        "conditionKeys": [],
        "dependentActions": []
      }
    ],
    "conditionKeys": [
      "aws:TagKeys"
    ],
    "dependentActions": []
  },
  "UpdatePullThroughCacheRule": {
    "name": "UpdatePullThroughCacheRule",
    "description": "Grants permission to update the pull-through cache rule",
    "accessLevel": "Write",
    "resourceTypes": [],
    "conditionKeys": [],
    "dependentActions": []
  },
  "UpdateRepositoryCreationTemplate": {
    "name": "UpdateRepositoryCreationTemplate",
    "description": "Grants permission to update the repository creation template",
    "accessLevel": "Write",
    "resourceTypes": [],
    "conditionKeys": [],
    "dependentActions": [
      "ecr:CreateRepository",
      "ecr:PutLifecyclePolicy",
      "ecr:SetRepositoryPolicy",
      "iam:CreateServiceLinkedRole",
      "iam:PassRole"
    ]
  },
  "UploadLayerPart": {
    "name": "UploadLayerPart",
    "description": "Grants permission to upload an image layer part to Amazon ECR",
    "accessLevel": "Write",
    "resourceTypes": [
      {
        "name": "repository",
        "required": true,
        "conditionKeys": [],
        "dependentActions": []
      }
    ],
    "conditionKeys": [],
    "dependentActions": []
  },
  "ValidatePullThroughCacheRule": {
    "name": "ValidatePullThroughCacheRule",
    "description": "Grants permission to validate the pull-through cache rule",
    "accessLevel": "Read",
    "resourceTypes": [],
    "conditionKeys": [],
    "dependentActions": []
  }
}